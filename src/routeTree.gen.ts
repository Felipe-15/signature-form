/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SummaryLazyImport = createFileRoute('/summary')()
const PlansLazyImport = createFileRoute('/plans')()
const CongratulationsLazyImport = createFileRoute('/congratulations')()
const AddonsLazyImport = createFileRoute('/addons')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SummaryLazyRoute = SummaryLazyImport.update({
  path: '/summary',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/summary.lazy').then((d) => d.Route))

const PlansLazyRoute = PlansLazyImport.update({
  path: '/plans',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/plans.lazy').then((d) => d.Route))

const CongratulationsLazyRoute = CongratulationsLazyImport.update({
  path: '/congratulations',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/congratulations.lazy').then((d) => d.Route),
)

const AddonsLazyRoute = AddonsLazyImport.update({
  path: '/addons',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/addons.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/addons': {
      preLoaderRoute: typeof AddonsLazyImport
      parentRoute: typeof rootRoute
    }
    '/congratulations': {
      preLoaderRoute: typeof CongratulationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/plans': {
      preLoaderRoute: typeof PlansLazyImport
      parentRoute: typeof rootRoute
    }
    '/summary': {
      preLoaderRoute: typeof SummaryLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AddonsLazyRoute,
  CongratulationsLazyRoute,
  PlansLazyRoute,
  SummaryLazyRoute,
])

/* prettier-ignore-end */
